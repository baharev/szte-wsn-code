
PRAGMA foreign_keys = ON;

PRAGMA foreign_keys;
1

================================================================================


CREATE TABLE person (

id INTEGER PRIMARY KEY,

name TEXT NOT NULL,

birthday DATE NOT NULL,

date_added DATE NOT NULL,

UNIQUE (name, birthday),

CHECK (birthday < DATE('now', 'localtime'))

);

================================================================================

INSERT INTO person VALUES (NULL, UPPER('Jóska Pisti'), DATE('1977-12-31'), DATETIME('now', 'localtime') );

SELECT * FROM person ORDER BY name, birthday;

SELECT * FROM person WHERE name LIKE 'kOvá%' ORDER BY name, birthday;

================================================================================

CREATE TABLE record (

id INTEGER PRIMARY KEY AUTOINCREMENT,

person INTEGER,

type INTEGER,

date_added DATE NOT NULL,

angles TEXT,

FOREIGN KEY (person) REFERENCES person(id) ON DELETE CASCADE,

FOREIGN KEY (type) REFERENCES motion(id)

);

INSERT INTO record VALUES (NULL, 9, 1, DATETIME('now', 'localtime'), NULL);

UPDATE record SET angles=NULL WHERE id=32;

================================================================================

CREATE TABLE motion (

id INTEGER PRIMARY KEY,

type TEXT NOT NULL,

UNIQUE (type)

);

INSERT INTO motion VALUES (null, UPPER('right_elbow_flex'));

================================================================================

SELECT person.name, person.birthday, motion.type, record.date_added 

FROM record JOIN person ON (record.person=person.id) JOIN motion ON (record.type=motion.id)

ORDER BY person.name, person.birthday, record.date_added DESC;
